# Import local .env for dev (ignored in production if no .env file exists)
spring.config.import=optional:file:.env[.properties]

# Database Configuration
# Prefer SPRING_DATASOURCE_URL (Render/Postgres), fallback to localhost for dev
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:5432/${DB_NAME:communitybook_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:${DB_USER:}}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:${DB_PASSWORD:}}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Use bytea for @Lob fields instead of oid (BLOB) in PostgreSQL
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.type.preferred_uuid_jdbc_type=CHAR

# File Upload Configuration
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# Database Connection Pool
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2

# Server Configuration
server.port=${PORT:8080}
# this means that our backend API will be accessible at http://localhost:8080 (whereas frontend is at :3000)

# Application Configuration
spring.application.name=community-book-backend

# Logging
logging.level.com.communitybook=DEBUG
